<?php

use Drupal\node\NodeInterface;

/**
 * Implements hook_node_presave().
 */
function glossary_tooltip_node_presave(NodeInterface $node) {
  $terms = \Drupal::entityTypeManager()->getStorage('taxonomy_term')->loadTree('Glossary');

  foreach ($node->getFields() as $field) {
    if ($field->getFieldDefinition()->getType() == 'text') {
      $fieldValue = $field->value;
      $fieldValueLowercase = strtolower($fieldValue);

      $foundTerms = [];

      foreach ($terms as $term) {
        $termLowercase = strtolower($term->name);

        if (strpos($fieldValueLowercase, $termLowercase) !== false) {
          $foundTerms[$term->name] = $term->description;
        }
      }

      $cid = 'glossary_tooltip:node_terms:' . $node->id() . ':' . $field->getName();
      \Drupal::cache()->set($cid, $foundTerms);
    }
  }
}

/**
 * Implements hook_node_view().
 */
function glossary_tooltip_node_view(array &$build, NodeInterface $node, $display, $view_mode) {
  foreach ($node->getFields() as $field) {
    if ($field->getFieldDefinition()->getType() == 'text') {
      $cid = 'glossary_tooltip:node_terms:' . $node->id() . ':' . $field->getName();

      if ($cache = \Drupal::cache()->get($cid)) {
        $foundTerms = $cache->data;

        foreach ($foundTerms as $term => $description) {
          $pattern = '/\b' . preg_quote($term, '/') . '\b/i';
          $replacement = '<span title="' . $description . '">' . $term . '</span>';
          $build[$field->getName()][0]['#text'] = preg_replace($pattern, $replacement, $build[$field->getName()][0]['#text']);
        }
      }
    }
  }
}

/**
 * Implements hook_node_update().
 */
function glossary_tooltip_node_update(NodeInterface $node) {
  foreach ($node->getFields() as $field) {
    if ($field->getFieldDefinition()->getType() == 'text') {
      $cid = 'glossary_tooltip:node_terms:' . $node->id() . ':' . $field->getName();
      \Drupal::cache()->invalidate($cid);
    }
  }
}

/**
 * Implements hook_node_delete().
 */
function glossary_tooltip_node_delete(NodeInterface $node) {
  foreach ($node->getFields() as $field) {
    if ($field->getFieldDefinition()->getType() == 'text') {
      $cid = 'glossary_tooltip:node_terms:' . $node->id() . ':' . $field->getName();
      \Drupal::cache()->delete($cid);
    }
  }
}
